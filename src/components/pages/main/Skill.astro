---
import { Icon } from "astro-icon/components";
// Skills data
const skills = {
  Languages: ["JavaScript", "PHP", "Python", "Bash"],
  Databases: ["MySQL", "MariaDB", "MongoDB"],
  DevOps: ["Docker", "Podman", "Linux"],
  Web: ["React", "Node.js", "Astro", "HTML/CSS"],
  Learning: ["Cybersecurity", "Languages", "System Administration"],
};

// Types
interface GitHubRepo {
  name: string;
  description: string | null;
  language: string | null;
  stargazers_count: number;
  forks_count: number;
  updated_at: string;
  html_url: string;
  topics: string[];
  fork: boolean;
  archived: boolean;
}

interface ProcessedRepo {
  name: string;
  description: string;
  language: string;
  stars: number;
  forks: number;
  updated: string;
  url: string;
  topics: string[];
}

const terminalIcons: Record<keyof typeof skills, string> = {
  Languages: "[EXE]",
  Databases: "[DB]",
  DevOps: "[SYS]",
  Web: "[WWW]",
  Learning: "[NEW]",
};

const getLanguageColor = (language: string): string => {
  const colors: Record<string, string> = {
    JavaScript: "text-yellow-400",
    TypeScript: "text-blue-400",
    Python: "text-primary",
    PHP: "text-purple-400",
    Shell: "text-secondary",
    HTML: "text-orange-400",
    CSS: "text-blue-300",
    Unknown: "text-gray-500",
  };
  return colors[language] || "text-gray-500";
};

// Extend Window interface
declare global {
  interface Window {
    switchTab: (tab: string) => void;
    loadGitHubRepos: () => void;
  }
}
---

<section
  id="skills-projects"
  class="text-primary bg-terminal-pattern px-4 py-12 font-mono md:px-6 md:py-20"
>
  <div class="mx-auto max-w-6xl">
    <!-- Mobile Header -->
    <div class="mb-8 block text-center md:hidden">
      <h2 class="text-[white mb-4 text-xl">Skills & Projects</h2>
      <p class="text-secondary text-sm">My technical toolkit and latest work</p>
    </div>

    <!-- Desktop Terminal Header -->
    <div class="mb-8 hidden md:block">
      <h2
        id="terminal-title"
        class="text-primary mb-4 font-mono text-2xl select-none lg:text-3xl"
      >
        <span class="text-white">$ </span><span id="skill-title"></span>
      </h2>
      <div class="mb-6 text-sm text-gray-500">
        <p>total {Object.keys(skills).length}</p>
        <p>drwxr-xr-x 2 malvin malvin 4096 Jan 26 15:30 skills/</p>
        <p>drwxr-xr-x 2 malvin malvin 4096 Jan 26 15:30 projects/</p>
      </div>
    </div>

    <!-- Terminal Tabs -->
    <div class="mb-8">
      <div class="flex border-b border-gray-800">
        <button
          id="skills-tab"
          class="tab-active text-primary inline-flex items-center gap-1 border-b-2 border-green-400 px-4 py-2 align-middle text-sm transition-all duration-200 hover:bg-green-400/10"
          onclick="switchTab('skills')"
        >
          <Icon size={16} name="mdi:folder" /> skills/
        </button>

        <button
          id="projects-tab"
          class="hover:text-primary text-secondary inline-flex items-center gap-1 border-b-2 border-transparent px-4 py-2 align-middle text-sm transition-all duration-200 hover:bg-green-400/10"
          onclick="switchTab('projects')"
        >
          <Icon size={16} name="mdi:folder" /> projects/
        </button>
      </div>
    </div>

    <!-- Skills Content -->
    <div
      id="skills-content"
      class="tab-content transition-opacity duration-300 ease-in-out"
    >
      <!-- Mobile Skills -->
      <div class="block md:hidden">
        <div class="grid grid-cols-1 gap-4">
          {
            Object.entries(skills).map(([category, items]) => (
              <div class="border border-gray-800 bg-[#111111] p-4 active:scale-[0.98] active:bg-[#1a1a1a]">
                <h3 class="mb-3 flex items-center gap-2 text-lg font-bold text-green-300">
                  <Icon
                    name={
                      category === "Languages"
                        ? "mdi:code-braces"
                        : category === "Databases"
                          ? "mdi:database"
                          : category === "DevOps"
                            ? "mdi:server"
                            : category === "Web"
                              ? "mdi:web"
                              : "mdi:book-open-page-variant"
                    }
                    size={24}
                    class="text-green-300"
                  />
                  {category}
                </h3>

                <div class="flex flex-wrap gap-2">
                  {items.map((skill: string) => (
                    <span class="rounded-sm border border-gray-700 bg-gray-900 px-3 py-1 text-sm text-green-200 transition-colors hover:text-white">
                      {skill}
                    </span>
                  ))}
                </div>
              </div>
            ))
          }
        </div>
      </div>

      <!-- Desktop Skills -->
      <div class="hidden md:block">
        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {
            Object.entries(skills).map(([category, items]) => (
              <div class="group hover:border-muted-dark bg-min border border-gray-800 p-4 transition-colors hover:bg-gradient-to-br hover:from-[#0f0f0f] hover:to-[#1a1a1a] hover:shadow-[0_0_20px_rgba(34,197,94,0.1)]">
                <div class="mb-4 flex items-center gap-2 text-green-300">
                  <span class="text-primary">
                    {terminalIcons[category as keyof typeof skills]}
                  </span>
                  <span class="font-bold">{category.toLowerCase()}/</span>
                </div>
                <div class="space-y-1">
                  <div class="mb-2 text-xs text-gray-500">
                    $ ls {category.toLowerCase()}/
                  </div>
                  {items.map((skill: string) => (
                    <div class="flex cursor-default items-center gap-2 text-sm transition-colors hover:text-white">
                      <span class="w-4 text-green-600">-</span>
                      <span class="text-secondary w-16 text-xs">
                        {(Math.random() * 100).toFixed(0).padStart(3, "0")}K
                      </span>
                      <span class="text-green-200 hover:text-white">
                        {skill.toLowerCase().replace(/[^a-z0-9]/g, "_")}.
                        {category === "Languages"
                          ? "lang"
                          : category === "Databases"
                            ? "db"
                            : category === "DevOps"
                              ? "sys"
                              : category === "Web"
                                ? "web"
                                : "learn"}
                      </span>
                    </div>
                  ))}
                </div>
                <div class="mt-4 border-t border-gray-800 pt-3 text-xs text-gray-500">
                  <span>
                    {items.length} {items.length === 1 ? "skill" : "skills"}
                  </span>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>

    <!-- Projects Content -->
    <div
      id="projects-content"
      class="tab-content hidden transition-opacity duration-300 ease-in-out"
    >
      <!-- Actual Projects -->
      <div id="projects-data">
        <!-- Mobile Projects -->
        <div class="block md:hidden">
          <div id="mobile-repos" class="grid grid-cols-1 gap-4">
            <!-- Repos will be loaded here -->
          </div>
        </div>

        <!-- Desktop Projects -->
        <div class="hidden md:block">
          <div
            id="desktop-repos"
            class="grid gap-6 md:grid-cols-2 lg:grid-cols-3"
          >
            <!-- Repos will be loaded here -->
          </div>
        </div>
      </div>

      <!-- Error State -->
      <div id="projects-error" class="hidden py-8 text-center">
        <p class="mb-2 text-red-400">Failed to load repositories</p>
        <p class="text-secondary text-sm">
          GitHub API may be temporarily unavailable
        </p>
        <button
          onclick="loadGitHubRepos()"
          class="text-primary border-muted-dark hover:bg-muted-dark mt-4 border px-4 py-2 transition-colors hover:text-black"
        >
          Try Again
        </button>
      </div>
    </div>

    <!-- Terminal Footer -->
    <div class="mt-8 hidden text-sm text-gray-500 md:block">
      <p>
        $ echo "Skills: {Object.values(skills).flat().length} | Projects: <span
          id="project-count">loading...</span
        >"
      </p>
      <p class="text-primary">
        Skills: {Object.values(skills).flat().length} | Projects: <span
          id="project-count-display">loading...</span
        >
      </p>
    </div>
  </div>
</section>
